/**
 * 
 */
package linkedLists;

/**
 * InsertSortedList.java 
 * @author Basava R.Kanaparthi(basava.08@gmail.com)
 * Created on Mar 8, 2016
 */
public class InsertSortedList {
	static NodeD SortedInsert(NodeD head,int data) {
		  NodeD new_node = new NodeD();
		  new_node.data = data;
		  new_node.next = null;
		  new_node.prev  = null;
		  if (head == null)
		      return new_node;
		  else if (new_node.data < head.data)
		  {
			  new_node.next = head;
			  head.prev =  new_node;
			  return new_node;
		  }
		  
		  NodeD temp = head;
		  int i = 0;
		  while (temp.next != null && new_node.data < temp.next.data)  
		  {
		      temp = temp.next;
		  }
		  // Reached the appropriate List but couldn't insert
		  new_node.prev = temp.prev;
          new_node.next = temp;
          temp.prev = new_node;
          return head;
		 return head;
	}
	
	public static void main(String[] args)
	{
		NodeD head = null;
		head = SortedInsert(head,5);
		head = SortedInsert(head,2);
		head = SortedInsert(head,3);
		head = SortedInsert(head,1);
		head = SortedInsert(head,7);
		printList(head);
	}
	 public static void printList(NodeD head)
	 {
		 while(head != null)
		 {
			 System.out.print(head.data + "->");
			 head = head.next;
		 }
		 System.out.print("NULL" + "\n");
	 }
}

class NodeD{
	int data;
	NodeD next;
	NodeD prev;
}
